# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: flightTracker
custom:
  AWS_DYNAMODB_TABLE: "DYNAMODB_TABLE_NAME"
  AWS_REGION: "AWS REGION"
  AWS_ACCOUNT_NUMBER: "YOUR_ACCOUNT_NUMBER"
  API_KEY_1: "YOUR_GOOGLE_API_KEY"
provider:
  name: aws
  runtime: nodejs4.3
  profile: pipe
  stage: dev
  region: ${self:custom.AWS_REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:BatchWriteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource:
        Fn::Join:
          - ""
          - - arn:aws:dynamodb:${self:custom.AWS_REGION}:${self:custom.AWS_ACCOUNT_NUMBER}:table/
            - Ref : FlightsTrackerTable
    - Effect: Allow
      Action:
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
      Resource:
        Fn::GetAtt: 
          - FlightsTrackerTable
          - StreamArn

# you can add packaging information here
#package:
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

functions:
  fetchPrices:
    handler: fetchPrices.handle
    timeout: 300
    memorySize: 128
    environment:
      # ENV Variables can be a reference to a generated resource (ie. table name)
      DYNAMODB_TABLE:
        Ref : FlightsTrackerTable 
      # ENV Variables can also be a reference to a global variable defined in serverless
      API_KEY: ${self:custom.API_KEY_1}
    events:
     - schedule: rate(12 hours)
  checkPrices:
    handler: checkPrices.handle
    timeout: 120
    memorySize: 128
    environment:
      # ENV Variables can also be just a field
      PHONE: "+543513592111"
    events:
     - stream: #arn:aws:dynamodb:us-east-1:586011406659:table/FlightsTrackerTable/stream/2016-11-22T21:05:50.469
       Fn::GetAtt: 
          - FlightsTrackerTable
          - StreamArn

# you can add CloudFormation resource templates here
resources:
 Resources:
   FlightsTrackerTable:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: ${self:custom.AWS_DYNAMODB_TABLE}
       AttributeDefinitions:
         - AttributeName: timestamp
           AttributeType: S
       KeySchema:
         - AttributeName: timestamp
           KeyType: HASH
       ProvisionedThroughput:
         ReadCapacityUnits: 5
         WriteCapacityUnits: 5
       StreamSpecification:
         StreamViewType: NEW_IMAGE
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
